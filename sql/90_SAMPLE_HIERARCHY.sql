DROP TABLE IF EXISTS DEPT;

CREATE TABLE DEPT (
       ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT
      ,PARENT_ID INT(10) UNSIGNED DEFAULT '0'
      ,NAME VARCHAR(50)
      ,PRIMARY KEY(ID)
) ENGINE=INNODB DEFAULT CHARSET=UTF8

;

INSERT INTO DEPT(PARENT_ID, NAME) VALUES ( 0, 'ROOT');
INSERT INTO DEPT(PARENT_ID, NAME) VALUES ( 1, '1');
INSERT INTO DEPT(PARENT_ID, NAME) VALUES ( 1, '2');
INSERT INTO DEPT(PARENT_ID, NAME) VALUES ( 2, '1.1');
INSERT INTO DEPT(PARENT_ID, NAME) VALUES ( 2, '1.2');
INSERT INTO DEPT(PARENT_ID, NAME) VALUES ( 3, '2.1');
INSERT INTO DEPT(PARENT_ID, NAME) VALUES ( 6, '2.1.1');
INSERT INTO DEPT(PARENT_ID, NAME) VALUES ( 1, '3');
INSERT INTO DEPT(PARENT_ID, NAME) VALUES ( 10, '1.1.1.1');
INSERT INTO DEPT(PARENT_ID, NAME) VALUES ( 4, '1.1.1');


DROP FUNCTION IF EXISTS DEPT_CONNECT_BY_PARENT;

DELIMITER $$

CREATE FUNCTION DEPT_CONNECT_BY_PARENT() RETURNS INT
NOT DETERMINISTIC
READS SQL DATA
BEGIN
  DECLARE _ID INT;
  DECLARE _PARENT INT;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET @ID = NULL;

  SET _PARENT = @ID;
  SET _ID = -1;

  IF @ID IS NULL THEN
    RETURN NULL;
  END IF;

  LOOP
    SELECT MIN(ID)
      INTO @ID
      FROM DEPT
     WHERE PARENT_ID = _PARENT
       AND ID > _ID;

    IF @ID IS NOT NULL OR _PARENT = @START_WITH THEN
      SET @LEVEL = @LEVEL + 1;
      RETURN @ID;
    END IF;

    SET @LEVEL := @LEVEL - 1;

    SELECT ID, PARENT_ID
      INTO _ID, _PARENT
      FROM DEPT
      WHERE ID = _PARENT;
  END LOOP;
END

$$
DELIMITER ;


SELECT CONCAT(REPEAT(' ', LEVEL - 1), D.NAME) AS NAME
      ,D.ID
      ,D.PARENT_ID
      ,FUNC.LEVEL 
  FROM (
        SELECT DEPT_CONNECT_BY_PARENT() AS ID
              ,@LEVEL AS LEVEL
          FROM (
                SELECT @START_WITH := 0
                      ,@ID := @START_WITH
                      ,@LEVEL := 0
) VARS, DEPT
WHERE @ID IS NOT NULL
) FUNC
JOIN DEPT D
ON FUNC.ID = D.ID