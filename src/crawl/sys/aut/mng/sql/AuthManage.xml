<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="AuthManage">
    <typeAlias alias="voAuth" type="crawl.vo.VoAuth"/>

    <!-- 권한 정보 카운트  -->
	<select id="selectCntAuth" resultClass="int">
		SELECT /* selectCntAuth */
		       COUNT(*)
		       AS CNT
		  FROM AUTH
	      WHERE 1=1
		 <isNotEmpty property="sch_word">
		 	<isNotEmpty property="sch_fld" prepend="AND">
		 		$sch_fld$ LIKE '%$sch_word$%'
		 	</isNotEmpty>
		 </isNotEmpty>
	</select>
 
 	<!-- 권한 목록 조회  -->
	<select id="selectListAuth" resultClass="voAuth">
		SELECT /* selectListAuth */
		       *
		  FROM (
		        SELECT C.AUTH_NO
		              ,C.UP_AUTH_NO
		              ,C.UP_AUTH_ID
		              ,C.UP_AUTH_NM
		              ,C.AUTH_ID
		              ,C.AUTH_NM
		              ,@ROWNUM := @ROWNUM + 1 
                       AS ROWNO
		          FROM (
						SELECT A.AUTH_NO
						      ,A.UP_AUTH_NO
						      ,B.AUTH_ID AS UP_AUTH_ID
						      ,B.AUTH_NM AS UP_AUTH_NM
						      ,A.AUTH_ID
						      ,A.AUTH_NM
						  FROM AUTH A
						  LEFT OUTER JOIN AUTH B
						               ON A.UP_AUTH_NO = B.AUTH_NO
		                 WHERE 1=1
					 <isNotEmpty property="sch_word">
					 	<isNotEmpty property="sch_fld" prepend="AND">
					 		A.$sch_fld$ LIKE '%$sch_word$%'
					 	</isNotEmpty>
					 </isNotEmpty>	
						 ORDER BY A.AUTH_NO
		               ) C
		              ,(SELECT @ROWNUM := 0) AS ROWTAB
		       ) Z
		 WHERE ROWNO BETWEEN #startRow# AND #endRow#
	</select>
	
    <!-- 권한 정보 상세  -->
    <select id="selectAuthByAuthNo" resultClass="voAuth">
		SELECT /* selectAuthByAuthNo */
		       A.AUTH_NO
		      ,A.UP_AUTH_NO
		      ,B.AUTH_ID AS UP_AUTH_ID
		      ,B.AUTH_NM AS UP_AUTH_NM
		      ,A.AUTH_ID
		      ,A.AUTH_NM
		  FROM AUTH A
		  LEFT OUTER JOIN AUTH B
		               ON A.UP_AUTH_NO = B.AUTH_NO
         WHERE 1=1
	       AND A.AUTH_NO = #authNo#
    </select>

    <!-- 권한 정보 카운트  -->
	<select id="selectCntAuthByAuthId" resultClass="int">
		SELECT /* selectCntAuthByAuthId */
		       COUNT(*)
		       AS CNT
		  FROM AUTH
	     WHERE AUTH_ID = #authId#
	</select>
	
    <!-- 권한 정보 인서트  -->
    <insert id="insertAuth">
    	<selectKey keyProperty="authNo" resultClass="java.lang.String">
			SELECT IFNULL(MAX(AUTH_NO),0) + 1 
			       AS AUTH_NO
			  FROM AUTH
		</selectKey>
		INSERT INTO AUTH /* insertAuth */
		      (AUTH_NO
		      ,UP_AUTH_NO
              ,AUTH_ID
              ,AUTH_NM)
		VALUES
		      (#authNo#
              ,#upAuthNo#
              ,#authId#
              ,#authNm#
		      )
    </insert>
    
    <!-- 상위 권한 정보 카운트  -->
	<select id="selectCntAuthByUpAuthNo" resultClass="int">
		SELECT /* selectCntAuthByUpAuthNo */
		       COUNT(*)
		       AS CNT
		  FROM AUTH
	     WHERE UP_AUTH_NO = #authNo#
	</select>
    
    <!-- 권한 정보 업데이트  -->
	<update id="updateAuthByAuthNo">
		UPDATE AUTH /* updateAuthByAuthNo */
		   SET UP_AUTH_NO = #upAuthNo#
              ,AUTH_ID = #authId#
              ,AUTH_NM = #authNm#
		 WHERE AUTH_NO = #authNo#
	</update>
 
    
	<!-- 권한 정보 삭제  -->
    <delete id="deleteAuthByAuthNo">
		DELETE /* deleteAuthByAuthNo */
		  FROM AUTH
		 WHERE AUTH_NO = #authNo#
    </delete> 
    
    <!-- 상위 권한 레벨 카운트  -->
	<select id="selectCntAuthLvlByUpUpChild" resultClass="int">
		SELECT /* selectCntAuthLvlByUpUpChild */
		       COUNT(*)
		       AS CNT
		  FROM AUTH_LVL
		 WHERE PARENT_AUTH_ID = #parentAuthId#
		   AND CHILD_AUTH_ID != 'AUTHENTICATED'
	</select>
	
    <!-- 권한 레벨 삭제  -->
    <delete id="deleteAuthLvlByUpChild">
		DELETE /* deleteAuthLvlByUpChild */
		  FROM AUTH_LVL
		 WHERE PARENT_AUTH_ID = #parentAuthId#
		   AND CHILD_AUTH_ID = #childAuthId#
    </delete> 
    
    <!-- 권한 레벨 인서트  -->
    <insert id="insertAuthLvlByUpChild">
		INSERT INTO AUTH_LVL /* insertAuthLvlByUpChild */
		      (PARENT_AUTH_ID
		      ,CHILD_AUTH_ID)
		VALUES
		      (#parentAuthId#
              ,#childAuthId#
		      )
    </insert>
</sqlMap>


